GRADER

CS61B Project 3
Jerry Lung cs61b-xn
Victor Shen cs61b-ot
Samuel Paul cs61b-os

Our hash table is mostly a copy of Jerry Lung's homework 6 solution. 

We have List which is extended by DList, and ListNode extended by DListNode. The implementation of ListNode and DListNode 
that we are using has the myList field.

We have interface Queue, extended by LinkedQueues. These codes are a copy of homework 8, with the exception 
QueueEmptyException removed - we expect to code in a way such that these errors will always be avoided. LinkedQueue uses
SListNodes. 

Since we have a Hash Table being a table of DLists, we created three different containers for the three different data 
structures encountered in Part 1. These containers are referenced by DListNode's item field. AdjEntry is for Adjacency Lists, 
HashEntry is the item for hash table entries, ListEntry is for the list of vertices. Each container just stores fields intrinsic 
to the data structure. 

To support getVertices() in O(|V|) time, we made a list of the vertices. getVertices() would thus only have to traverse this 
list and feed it into an array preset by the number of vertices, thus taking O(|V|) time. 